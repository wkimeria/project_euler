package euler

/* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

func nextFib(first int, second int) func() (int, int) {
	return func() (int, int) {
		prev_first := first
		first = second
		second = prev_first + second

		return first, second
	}
}

func Question2() int {
	total := 0
	fib := nextFib(0, 1)
	_, currentFib := fib()

	for currentFib < 4000000 {
		if currentFib%2 == 0 {
			total += currentFib
		}
		_, currentFib = fib()
	}

	return total
}
